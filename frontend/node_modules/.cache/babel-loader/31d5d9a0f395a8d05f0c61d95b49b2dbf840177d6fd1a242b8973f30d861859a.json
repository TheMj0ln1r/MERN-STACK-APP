{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useState } from \"react\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useSTate(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/user/signup\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context \n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return signup, isLoading, error;\n};\n_s(useSignup, \"qWfg/SW6VhFkh3lKVsoULyqFHns=\", true, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useAuthContext","useState","useSignup","_s","error","setError","isLoading","setIsLoading","useSTate","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/home/mj0ln1r/Desktop/CYBER/Projects/MERN-STACK-APP/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useAuthContext } from \"./useAuthContext\"\nimport {useState} from \"react\"\n\nexport const useSignup = () => {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useSTate(null)\n    const {dispatch} = useAuthContext()\n\n    const signup = async (email, password) =>{\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(\"/api/user/signup\",{\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email,password})\n        })\n        const json = await response.json()\n\n        if (!response.ok){\n            setIsLoading(false)\n            setError(json.error)\n        }\n\n        if(response.ok){\n            //save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            //update the auth context \n            dispatch({type: \"LOGIN\", payload: json})\n            setIsLoading(false)\n        }\n    }\n    return (signup, isLoading, error)\n}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAAQC,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EAEnC,MAAMU,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAI;IACrCL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAC;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAACC;MAAQ,CAAC;IACzC,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACbd,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;IACxB;IAEA,IAAGS,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCb,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAQG,MAAM,EAAEJ,SAAS,EAAEF,KAAK;AACpC,CAAC;AAAAD,EAAA,CA/BYD,SAAS;EAAA,QAGCF,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}